
Topics:

  0. props:
      attributes passed for a component is called as prop
      which can be used inside the props / destructured at component level

      the essential information needed to create a component for displaying the information

      props validation:

        specifying the type of the data for each props of a component is called prop validation

      proptypes:
        specifying the type of the props values needed to create a component
        this helps in reducing unwanted errors because of typeerror  

      List of Students Component Design:

        Student:
          props:
            1. image - string
            2. name - string
            3. duration - { startDate, endDate }
      

  1. State --> is value in the rendered JSX that changes during any events
      
      Pimary in React:

        ****** Do Not Touch Document Object in React ******

        it is CRIME if You do so

      1. Initial JS memory Load and rendering
          JS Memory will get modified by the function or actions

          But the re-rendering will not happen, this prevents the JS memory from getting into JSX UI

      2. re-rendering
          Latest JS Memeory Values gets loaded on to the HTML DOM
      
      rendering & re-rendering parts of react

        Normal JSX Syntax will render only once without any state hooks

      Hooks:
        Hooking setup between the memory of the JS and JSX Element

        when a memory of JS changes( Hook memory value ), JSX automatically re-renders
      
      State Hook:
        holds a value which will change during events 
        a change in the value will re-render and update the value in the client-side html

  2. Stateful & Stateless component

      Stateful component is component which has a state value which changes

      Stateless -> Component which does not have a state value rather have only static values

      Props ---> static values passed during rendering
      State --> a value change which causing the re-rendering
  
  3. Reusable Components:
      Trying to re-reuse the parts of the UI elements

      Always look for commanalities in the design and write resusable components with same props

  

Next Session:


  4. Component Life Cycle:

      Initialization: JS Loads the JSX into the memory

      Mounting: JSX gets loaded into the RealDOM

      Updating: Some contents or state gets updated in the Component JSX

      Unmounting: Removing the element from the RealDOM

  5. Life Cycle Hook - useEffect

      We are gonna target each of the phases and we are going to do something those phases( Mounting, Updating, Unmounting )

      Mounted: useEffect with Mounted
        Examples: Calculating initial value or loading some data from APIs
    
      Updated: Liking a particular product / post in instagram

      Unmounting: Deleting a product from Cart

  6. Passing Data from Parent to Child Component
      passing the data from parent to child in the props ( child props )
     Passing Data from child to parent
      passing function as prop to the child

Task:

  Day 21: React Shopping Cart Task
    https://docs.google.com/document/d/1mqZqoxmPlEioKCwVfuOYIUcG2kESrYuocrYO4h9kiRk/edit

    Please refer the Students Component for more ideas

  Day 22: React Components Task

    https://docs.google.com/document/d/1erFPRTYe9d3V9QRwmEw8mxOI0ZeQ3_HklTtXwA3Ilco/edit

    https://startbootstrap.com/previews/landing-page

      Components:

        Feature:   
          image: string / icon: node
          title: string
          description: string
          imageFloat: 'left' | 'right' | undefined

        ImageFeature:
          image: string
          title: string
          description: string
          float: 'left' | 'right'

        people:
          image: string
          name: string
          review: string

        banner:
          size:
          description: string
